import {
  CompositeNavigationProp,
  CompositeScreenProps,
  NavigatorScreenParams,
  RouteProp,
} from "@react-navigation/native";
import { StackNavigationProp } from "@react-navigation/stack";
import { ResponsiveValue } from "native-base/lib/typescript/components/types";
import { ViewStyle } from "react-native";
import * as yup from "yup";
import {
  LOGIN_SCHEMA,
  SECTION_1B_FORM_SCHEMA,
  SECTION_1C_FORM_SCHEMA,
  SECTION_1_FORM_SCHEMA,
  SECTION_2_FORM_SCHEMA,
} from "./schemas";

export interface AuthCredentials {
  id: any;
  username: any;
  password: any;
}

//! localStorageInitialState
export interface LocalStorageInitialState {
  token: string;
  email: string;
}

//! authInitialState
export interface AuthInitialState {
  appIsOnline: boolean | null;
  isLoggedIn: boolean;
  rememberMe: boolean;
  authenticateResponse: AuthenticateResponse;
  onlineAgent: AuthCredentials | undefined;
  offlineAgent: AuthCredentials[] | undefined;
}

//! beneficiaryInitialState
export interface BeneficiaryInitialState {
  saveBeneficiaryResponse: SaveBeneficiaryResponse;
  benInStore: any | undefined;
  benGoodToGo: boolean;
  beneficiaryCount: number;
  beneficiaryTableData: BeneficiaryTableData[];
}

export interface BeneficiaryTableData extends Section2FormType {
  BEN_STATUS: string;
}
//! memberInitialState
export interface MemberInitialState {
  mbrno: string;
  memberInStore: any;
  saveMemberResponse: SaveMemberResponse;
  membersGoodToGo: boolean;
  memberTableData: Section1FormTypeForLocalDB[];
}

//!next of kin initial state
export interface NextOfKinInitialState {
  saveNextOfKinResponse: SaveNextOfKinResponse;
  NOKinStoreData: section1cFormType | undefined;
  NOKGoodToGo: boolean;
  NOKTableData: section1cFormType[];
}

export interface FinalBeneficiaryFormType extends BeneficiaryFormType {
  BEN_STATUS: string;
}

interface SaveMemberResponse {
  success: SaveMemberSuccess | null;
  error: string | null;
  status: string | null;
}
export interface SaveMemberSuccess {
  id: number;
  nextOfKinEntity: null;
  beneficiaryEntity: null;
  mbr_GENDER: string;
  mbr_TEL_NO1: string;
  mbr_TEL_NO2: string;
  mbr_ADDR_LN1: string;
  mbr_ADDR_LN2: string;
  mbr_BRANCH: string;
  mbr_CITY: string;
  mbr_VEHICLE_NO: string;
  mbr_BENEFIT_PYMT: string;
  mbr_DATE_CREATED: Date;
  mbr_NUM_BEN: number;
  mbr_VEHICLE_NO2: string;
  riders_CARD_NO: string;
  mbr_IMG_REF: string;
  mbr_WELFARE_PKG: string;
  mbrsname: string;
  mbrfname: string;
  mbr_STATUS: string;
  mbr_DOB: Date;
  mbr_LGA: string;
  mbr_STATE: string;
  mbrno: string;
}

export interface Section1FormTypeForLocalDB
  extends Section1FormType,
    section1bFormType {
  MBR_WELFARE_PKG: string;
  MBR_STATUS: string;
  MBR_NUM_BEN: number;
  MBR_NO: number;
}

interface SaveBeneficiaryResponse {
  success: SaveBeneficiarySuccessResponse | undefined;
  error: string | undefined;
  status: string | undefined;
}

export interface SaveBeneficiarySuccessResponse extends BeneficiaryEntity {}
interface SaveNextOfKinResponse {
  success: SaveNextOfKinSuccessResponse | undefined;
  error: string | undefined;
  status: string | undefined;
}

// Generated by https://quicktype.io

export interface SaveNextOfKinSuccessResponse {
  id: number;
  nextOfKinEntity: NextOfKinEntity;
  beneficiaryEntity: BeneficiaryEntity[];
  mbr_STATE: string;
  mbr_LGA: string;
  mbr_IMG_REF: string;
  mbr_DATE_CREATED: Date;
  mbrno: string;
  mbr_WELFARE_PKG: string;
  mbrsname: string;
  mbrfname: string;
  mbr_STATUS: string;
  mbr_DOB: Date;
  mbr_GENDER: string;
  mbr_TEL_NO1: string;
  mbr_TEL_NO2: string;
  mbr_ADDR_LN1: string;
  mbr_ADDR_LN2: string;
  mbr_BRANCH: string;
  mbr_CITY: string;
  mbr_VEHICLE_NO: string;
  mbr_BENEFIT_PYMT: string;
  mbr_NUM_BEN: number;
}

export interface BeneficiaryEntity {
  id: number;
  ben_SNAME: string;
  ben_FNAME: string;
  ben_DOB: Date;
  ben_GENDER: string;
  ben_REL: string;
  ben_TEL_NO1: string;
  ben_TEL_NO2: string;
  ben_STATUS: string;
  ben_DATE_CREATED: Date;
}

export interface NextOfKinEntity {
  id: number;
  mbr_NO: string;
  mbr_NEXT_KIN_SNAME: string;
  mbr_NEXT_KIN_FNAME: string;
  mbr_NEXT_KIN_REL: string;
  mbr_NEXT_KIN_TEL_NO1: string;
  mbr_NEXT_KIN_TEL_NO2: string;
  mbr_NEXT_KIN_ADDR: string;
}

export interface Endpoints {
  authenticate: string;
  saveNextOfKin: string;
  saveBeneficiary: string;
  saveMember: string;
}

interface AuthenticateResponse {
  success: AuthenticateResponseSuccess | undefined;
  error: string | undefined;
  status: string | undefined;
}

// Generated by https://quicktype.io

export interface GenericErrorResponse {
  timestamp: Date;
  status: number;
  error: string;
  message: string;
  path: string;
}

// Generated by https://quicktype.io

export interface AuthenticateResponseSuccess {
  token: string;
  dcagmt_LGA: string;
  dcagmtusrname: string;
  dcamgtno: string;
  dcagmtpasswrd: string;
  dcagmt_STATE: string;
  dcagmt_SNAME: string;
  dcagmt_FNAME: string;
  dcagmt_DOB: Date;
  dcagmt_GENDER: string;
  dcagmt_TEL_NO1: string;
  dcagmt_TEL_NO2: string;
  dcagmt_ADDR_LN1: string;
  dcagmt_ADDR_LN2: string;
  dcagmt_CITY: string;
  dcagmt_BRANCH: string;
  dcagmt_NEXT_KIN_SNAME: string;
  dcagmt_NEXT_KIN_FNAME: string;
  dcagmt_NEXT_KIN_REL: string;
  dcagmt_NEXT_KIN_TEL_NO: string;
  dcagmt_NEXT_KIN_ADDR: string;
}

export type AUTH_STACK_PARAMS_LIST = {
  login: undefined;
};

export type ROOT_STACK_PARAMS_LIST = {
  "auth-stack": undefined;
  "section-stack": undefined;
  "kalyan-dpp": undefined;
};

export type RootNavigatorParamsList = {
  "auth-stack": NavigatorScreenParams<AUTH_STACK_PARAMS_LIST>;
  "section-stack": NavigatorScreenParams<SECTION_STACK_PARAMS_LIST>;
  "kalyan-dpp": StackNavigationProp<ROOT_STACK_PARAMS_LIST>;
};

export type SECTION_STACK_PARAMS_LIST = {
  "section-screen-1": undefined;
  "section-screen-1b": undefined;
  "section-screen-1c": undefined;
  "section-screen-2": undefined;
};

export type Section1ScreenProps = {
  navigation: StackNavigationProp<
    SECTION_STACK_PARAMS_LIST,
    "section-screen-1"
  >;
};

export type Section1bScreenProps = {
  navigation: StackNavigationProp<RootNavigatorParamsList, "kalyan-dpp">;
};
export type Section1cScreenProps = {
  navigation: StackNavigationProp<
    SECTION_STACK_PARAMS_LIST,
    "section-screen-1c"
  >;
};
export type Section2ScreenProps = {
  navigation: StackNavigationProp<
    SECTION_STACK_PARAMS_LIST,
    "section-screen-2"
  >;
};

export type KdppScreenNavigationProps = Section1bScreenProps["navigation"];

export type LoginScreenProps = {
  navigation: StackNavigationProp<RootNavigatorParamsList>;
};

export interface COLORS {
  primary_main: string;
  section_main: string;
  input_secondary: string;
}

export interface SubmitButtonProps {
  onPress: () => void;
  isLoading?: boolean;
  w?: any;
  justifyContent?: ViewStyle["justifyContent"];
  alignItems?: ViewStyle["alignItems"];
  alignSelf?: ViewStyle["alignSelf"];
}

export interface BeneficiaryFormType {
  BEN_SNAME: string;
  BEN_FNAME: string;
  BEN_DOB: string;
  BEN_GENDER: string;
  BEN_REL: string;
  BEN_TEL_NO1: string;
  BEN_TEL_NO2: string;
  BEN_STATUS: string;
}

export interface TableTitleType {
  title: string;
  subTitle?: string;
}

export type TableRowType = TableTitleType & { tableContent: string };

export type LoginFormType = yup.InferType<typeof LOGIN_SCHEMA>;
export type Section1FormType = yup.InferType<typeof SECTION_1_FORM_SCHEMA>;
export type section1bFormType = yup.InferType<typeof SECTION_1B_FORM_SCHEMA>;
export type section1cFormType = yup.InferType<typeof SECTION_1C_FORM_SCHEMA>;
export type Section2FormType = yup.InferType<typeof SECTION_2_FORM_SCHEMA>;
